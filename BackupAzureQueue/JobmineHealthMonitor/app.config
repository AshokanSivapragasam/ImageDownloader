<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>

  <appSettings>
    <!--name of the log appender-->
    <add key="logappendername" value="JobMineHealthMonitorLog"/>
    <!--name of the mail appender-->
    <add key="mailappendername" value="JobMineHealthMonitorMail"/>
    <!--full path of the config file-->
    <add key="configfile" value="D:\Usr\Ashokan\Projects\StackOverflow\JobmineHealthMonitor\jobminehealthmonitor.cfg"/>
    <!--frequency(in milliseconds) for the service to monitor the jobmine server-->
    <add key="frequency" value="6000"/>
    <!--commandtimeout(in milliseconds) for the jobmine server tag command-->
    <add key="commandtimeout" value="300000"/>
  </appSettings>

  <!--Logger Configuration-->
  <log4net>
    <!-- Appender that captures all of the database messages -->
    <appender name="JobMineHealthMonitorLog" type="log4net.Appender.RollingFileAppender">
      <!--<file value="[LOGSDIRECTORY][LOGFILENAME]" />-->
      <file value="jobminehealthmonitor.txt"/>
      <immediateFlush value="true"/>
      <appendToFile value="true"/>
      <maximumFileSize value="10240KB"/>
      <!--10240MB is, 10MB-->
      <maxSizeRollBackups value="3000"/>
      <!--Max. NoOfLogs in the 'log' directory will be, 3000 files-->
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%date %level %thread %logger - %message%newline" />-->
        <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss}|JobMineHealthMonitor|%level|Thread_%thread| %message%newline"/>
        <!--<conversionPattern value="%message%newline" />-->
      </layout>
    </appender>

    <appender name="JobMineHealthMonitorMail" type="Modelus.Log4NetExtensions.HtmlSmtpAppender, Modelus.Log4NetExtensions">
      <to value="asivapragasam@burning-glass.com"/>
      <from value="jobfeed@aperture-control.com"/>
      <username value="jobfeed@aperture-control.com"/>
      <password value="!j0bf33d#bg$"/>
      <subject value="XXX"/>
      <authentication value="Basic"></authentication>
      <smtpHost value="secure.emailsrvr.com"/>
      <port value="587"/>
      <bufferSize value="1"/>
      <lossy value="true"/>
      <evaluator type="log4net.Core.LevelEvaluator">
        <!--
            The application would send out mails if and only if the logger level 
            is equal to or above the threshold value.
            If <threshold value="ERROR"/>, then the application will send out 
            mails only when the logger level is 'ERROR' and 'FATAL'.
            
            The logger levels having severity from low to high are,
                DEBUG|INFO|WARN|ERROR|FATAL
        -->
        <threshold value="INFO"/>
      </evaluator>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message"/>
      </layout>
    </appender>

    <!-- Set default logging level to WARN -->
    <root>
      <!--OFF|ALL|DEBUG|INFO|WARN|ERROR|FATAL-->
      <!--Logger levels are in ascending order-->
      <!--Filters can be added-->
      <!--<level value="ALL" />-->
      <level value="OFF"/>
      <!--<appender-ref ref="BGTWorkerNodeAgentLog" />-->
      <!--<appender-ref ref="SmtpAppender" />-->
    </root>
    <logger name="JobMineHealthMonitorLog">
      <level value="INFO"/>
      <appender-ref ref="JobMineHealthMonitorLog"/>
    </logger>
    <logger name="JobMineHealthMonitorMail">
      <level value="INFO"/>
      <appender-ref ref="JobMineHealthMonitorMail"/>
    </logger>
    <!--
    <renderer renderingClass="Logging_Sample.MyRenderingClass" renderedClass="Logging_Sample.ClassToBeLogged"/>
    -->
  </log4net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
